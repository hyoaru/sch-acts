package Main;

import ExpressionConversion.Conversion;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

public class MainForm extends javax.swing.JFrame {
    Conversion converter = new Conversion();
    
    private String[] conversionOptions = {"Infix", "Prefix", "Postfix"};
    private String baseExpression;
    private String outputExpression;
    private String conversionProcess;
    private String convertFrom;
    private String convertTo;
    
    public MainForm() {
        initComponents();
        initializeConvertionFromComboBox();
        btnShowProcess.setEnabled(false);
    }
    
    private void initializeConvertionFromComboBox(){
        for (int i = 0; i < conversionOptions.length; i++) {
            String convertionOption = conversionOptions[i];
            cmbConvertFrom.addItem(convertionOption);
        }
    }
    
    private void initializeConvertionToComboBox(){
        String convertFromSelectedItem = cmbConvertFrom.getSelectedItem().toString();
        for (int i = 0; i < conversionOptions.length; i++) {
            String convertionOption = conversionOptions[i];
            if (!convertionOption.equals(convertFromSelectedItem)){
                cmbConvertTo.addItem(convertionOption);
            }
            
        }
    }
    
    private void computeOutputExpression(){
        if (convertFrom.equals(conversionOptions[0])){
            if (convertTo.equals(conversionOptions[1])){
                outputExpression = converter.convertInfixToPrefix(baseExpression);
            } else {
                outputExpression = converter.convertInfixToPostfix(baseExpression);
            }
        } else if (convertFrom.equals(conversionOptions[1])){
            if (convertTo.equals(conversionOptions[0])){
                outputExpression = converter.convertPrefixToInfix(baseExpression);
            } else {
                outputExpression = converter.convertPrefixToPostfix(baseExpression);
            }
        } else {
            if (convertTo.equals(conversionOptions[0])){
                outputExpression = converter.convertPostfixToInfix(baseExpression);
            } else {
                outputExpression = converter.convertPostfixToPrefix(baseExpression);
            }
        }
    }
    
    private void clearTextFields(){
        txtConvertFrom.setText("");
        txtConvertTo.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFormHeading = new javax.swing.JPanel();
        lblFormTitle = new javax.swing.JLabel();
        lblFormSubtitle = new javax.swing.JLabel();
        pnlFormBody = new javax.swing.JPanel();
        pnlFormBodyMain = new javax.swing.JPanel();
        lblConvertFrom = new javax.swing.JLabel();
        lblConvertTo = new javax.swing.JLabel();
        cmbConvertFrom = new javax.swing.JComboBox<>();
        cmbConvertTo = new javax.swing.JComboBox<>();
        txtConvertFrom = new javax.swing.JTextField();
        txtConvertTo = new javax.swing.JTextField();
        btnCompute = new javax.swing.JButton();
        btnShowProcess = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Expression Converter");

        pnlFormHeading.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N

        lblFormTitle.setFont(new java.awt.Font("Segoe UI", 1, 34)); // NOI18N
        lblFormTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFormTitle.setText("Expression Converter");

        lblFormSubtitle.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblFormSubtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFormSubtitle.setText("DATA STRUCTURES AND ALGORITHMS COURSE REQUIREMENT");

        javax.swing.GroupLayout pnlFormHeadingLayout = new javax.swing.GroupLayout(pnlFormHeading);
        pnlFormHeading.setLayout(pnlFormHeadingLayout);
        pnlFormHeadingLayout.setHorizontalGroup(
            pnlFormHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormHeadingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFormTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFormSubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlFormHeadingLayout.setVerticalGroup(
            pnlFormHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormHeadingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFormSubtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblConvertFrom.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblConvertFrom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConvertFrom.setText("Convert from");

        lblConvertTo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblConvertTo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConvertTo.setText("Convert to");

        cmbConvertFrom.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cmbConvertFrom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbConvertFromItemStateChanged(evt);
            }
        });

        cmbConvertTo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        cmbConvertTo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbConvertToItemStateChanged(evt);
            }
        });

        txtConvertFrom.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtConvertTo.setEditable(false);
        txtConvertTo.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        btnCompute.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnCompute.setText("Compute");
        btnCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComputeActionPerformed(evt);
            }
        });

        btnShowProcess.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        btnShowProcess.setText("Show process");
        btnShowProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowProcessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFormBodyMainLayout = new javax.swing.GroupLayout(pnlFormBodyMain);
        pnlFormBodyMain.setLayout(pnlFormBodyMainLayout);
        pnlFormBodyMainLayout.setHorizontalGroup(
            pnlFormBodyMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormBodyMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlFormBodyMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCompute, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(txtConvertFrom)
                    .addComponent(lblConvertFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbConvertFrom, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormBodyMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbConvertTo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblConvertTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtConvertTo)
                    .addComponent(btnShowProcess, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        pnlFormBodyMainLayout.setVerticalGroup(
            pnlFormBodyMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormBodyMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormBodyMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblConvertFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblConvertTo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFormBodyMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbConvertTo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbConvertFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormBodyMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConvertFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConvertTo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormBodyMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCompute, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnShowProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlFormBodyLayout = new javax.swing.GroupLayout(pnlFormBody);
        pnlFormBody.setLayout(pnlFormBodyLayout);
        pnlFormBodyLayout.setHorizontalGroup(
            pnlFormBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormBodyLayout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addComponent(pnlFormBodyMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );
        pnlFormBodyLayout.setVerticalGroup(
            pnlFormBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFormBodyMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlFormHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlFormBody, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(pnlFormHeading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFormBody, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComputeActionPerformed
        convertFrom = cmbConvertFrom.getSelectedItem().toString();
        convertTo = cmbConvertTo.getSelectedItem().toString();
        if (!txtConvertFrom.getText().strip().equals("")){
            baseExpression = txtConvertFrom.getText();
            computeOutputExpression();
            if (!outputExpression.equals(" ")){
                txtConvertTo.setText(outputExpression);
                btnShowProcess.setEnabled(true);
            } else {
                txtConvertTo.setText("ERROR INPUT");
            }
        }
        
    }//GEN-LAST:event_btnComputeActionPerformed

    private void cmbConvertFromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbConvertFromItemStateChanged
        clearTextFields();
        cmbConvertTo.removeAllItems();
        initializeConvertionToComboBox();
        btnShowProcess.setEnabled(false);
    }//GEN-LAST:event_cmbConvertFromItemStateChanged

    private void cmbConvertToItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbConvertToItemStateChanged
        clearTextFields();
        btnShowProcess.setEnabled(false);
    }//GEN-LAST:event_cmbConvertToItemStateChanged

    private void btnShowProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowProcessActionPerformed
        conversionProcess = converter.getConversionProcess();
        System.out.println(conversionProcess);
        JOptionPane.showMessageDialog(null, new JTextArea(conversionProcess), "Conversion Process", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btnShowProcessActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompute;
    private javax.swing.JButton btnShowProcess;
    private javax.swing.JComboBox<String> cmbConvertFrom;
    private javax.swing.JComboBox<String> cmbConvertTo;
    private javax.swing.JLabel lblConvertFrom;
    private javax.swing.JLabel lblConvertTo;
    private javax.swing.JLabel lblFormSubtitle;
    private javax.swing.JLabel lblFormTitle;
    private javax.swing.JPanel pnlFormBody;
    private javax.swing.JPanel pnlFormBodyMain;
    private javax.swing.JPanel pnlFormHeading;
    private javax.swing.JTextField txtConvertFrom;
    private javax.swing.JTextField txtConvertTo;
    // End of variables declaration//GEN-END:variables
}
